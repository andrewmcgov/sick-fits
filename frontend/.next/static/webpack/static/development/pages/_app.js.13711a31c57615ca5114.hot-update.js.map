{"version":3,"file":"static/webpack/static/development/pages/_app.js.13711a31c57615ca5114.hot-update.js","sources":["webpack:///./components/Page.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport styled, { ThemeProvider, injectGlobal } from \"styled-components\";\n\nimport Header from \"../components/Header\";\nimport Meta from \"../components/Meta\";\n\n// This file is the main layout file, each page uses this temlate,\n// and the router renders it's content in here as {this.props.children}\n\n// Global styles for styled components\n// This object is passed to the ThemeProvider component below\nconst theme = {\n  red: \"#FF0000\",\n  black: \"#393939\",\n  grey: \"#3A3A3A\",\n  lightgrey: \"#E1E1E1\",\n  offWhite: \"#EDEDED\",\n  maxWidth: \"1000px\",\n  bs: \"0 12px 24px 0 rgba(0, 0, 0, 0.09)\"\n};\n\n// styled-components let's you create your own custom\n// components with their own scoped styles attached to them\n// They are used just like any other component\nconst StyledPage = styled.div`\n  background: white;\n  color: ${props => props.theme.black};\n`;\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin 0 auto;\n  padding: 2rem;\n`;\n\n// Use injectGlobal to add styles to the entire page,\n// these styles are not scoped like styled components are\n// injectGlobal does not have access top props.theme\n// But in this case it is in the same file\ninjectGlobal`\n  @font-face {\n    font-family: 'radnika_next';\n    src: url('/static/radnikanext-medium-webfont.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    font-size: 1.5rem;\n    line-height: 2;\n    font-family: 'radnika_next';\n  }\n  a {\n    text-decoration: none;\n    color: ${theme.black};\n  }\n  button {  font-family: 'radnika_next'; }\n`;\n\nclass Page extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <Meta />\n          <Header />\n          <Inner>{this.props.children}</Inner>\n        </StyledPage>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default Page;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AACA;AA2BA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAXA;AACA;AAaA;;;;A","sourceRoot":""}